name: CI
on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:

jobs:
  build:
    name: cargo build
    strategy:
      matrix:
        os: [macos, windows]
        toolchain: [nightly]
        include:
          - os: ubuntu
            toolchain: 1.77.0
          - os: ubuntu
            toolchain: nightly
            libbsd: true
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: setup environment
        shell: bash
        run: |
          if [[ ${{ matrix.os }} = windows ]]; then
            echo suffix=.exe
          else
            echo suffix=
          fi >> $GITHUB_ENV
      - name: install libbsd
        if: ${{ matrix.libbsd }}
        run: sudo sh -c 'apt-get update && apt-get -y install libbsd-dev'
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      - run: cargo build --all-targets
      - uses: actions/upload-artifact@v4
        with:
          name: pass-${{ matrix.os }}-${{ matrix.toolchain }}
          path: target/debug/examples/pass${{ env.suffix }}
      - run: cargo test
      - run: cargo test --features=zeroize
      - run: cargo test --features=libbsd-static --features=windows-vendored --no-default-features
        if: ${{ matrix.os != 'ubuntu' || matrix.libbsd }}

  lint:
    name: cargo fmt && cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy,rustfmt
      - uses: actions-rust-lang/rustfmt@v1
      - run: cargo clippy

  publish:
    name: cargo publish
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/main')
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    needs: [build, lint]
    environment: crates-io
    steps:
      - uses: actions/checkout@v5
      - run: cargo generate-lockfile && cat Cargo.lock
      - run: cargo publish --dry-run
      - uses: rust-lang/crates-io-auth-action@v1
        id: auth
        if: startsWith(github.ref, 'refs/tags/v')
      - run: cargo publish --no-verify --locked
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
